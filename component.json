{
    "title": "AWS Data Pipeline",
    "description": "AWS Data Pipeline configures and manages a data-driven workflow called a\npipeline. AWS Data Pipeline handles the details of scheduling and ensuring that\ndata dependencies are met so that your application can focus on processing the\ndata.\n\nAWS Data Pipeline provides a JAR implementation of a task runner called AWS Data\nPipeline Task Runner. AWS Data Pipeline Task Runner provides logic for common\ndata management scenarios, such as performing database queries and running data\nanalysis using Amazon Elastic MapReduce (Amazon EMR). You can use AWS Data\nPipeline Task Runner as your task runner, or you can write your own task runner\nto provide custom data management.\n\nAWS Data Pipeline implements two main sets of functionality. Use the first set\nto create a pipeline and define data sources, schedules, dependencies, and the\ntransforms to be performed on the data. Use the second set in your task runner\napplication to receive the next task ready for processing. The logic for\nperforming the task, such as querying the data, running data analysis, or\nconverting the data from one format to another, is contained within the task\nrunner. The task runner performs the task assigned to it by the web service,\nreporting progress to the web service as it does so. When the task is done, the\ntask runner reports the final success or failure of the task to the web service.",
    "docsUrl": "https://aws.amazon.com/datapipeline/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/datapipeline/2012-10-29/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://datapipeline.amazonaws.com/",
                    "http://datapipeline.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "ActivatePipeline": {
            "main": "./lib/actions/ActivatePipeline.js",
            "title": "ActivatePipeline",
            "description": "Validates the specified pipeline and starts processing pipeline tasks. If the\npipeline does not pass validation, activation fails.\n\nIf you need to pause the pipeline to investigate an issue with a component, such\nas a data source or script, call DeactivatePipeline.\n\nTo activate a finished pipeline, modify the end date for the pipeline and then\nactivate it.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ActivatePipeline.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AddTags": {
            "main": "./lib/actions/AddTags.js",
            "title": "AddTags",
            "description": "Adds or modifies tags for the specified pipeline.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AddTags.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreatePipeline": {
            "main": "./lib/actions/CreatePipeline.js",
            "title": "CreatePipeline",
            "description": "Creates a new, empty pipeline. Use <a>PutPipelineDefinition</a> to populate the pipeline.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreatePipeline.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeactivatePipeline": {
            "main": "./lib/actions/DeactivatePipeline.js",
            "title": "DeactivatePipeline",
            "description": "Deactivates the specified running pipeline. The pipeline is set to the \nDEACTIVATING state until the deactivation process completes.\n\nTo resume a deactivated pipeline, use ActivatePipeline. By default, the pipeline\nresumes from the last completed execution. Optionally, you can specify the date\nand time to resume the pipeline.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeactivatePipeline.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeletePipeline": {
            "main": "./lib/actions/DeletePipeline.js",
            "title": "DeletePipeline",
            "description": "Deletes a pipeline, its pipeline definition, and its run history. AWS Data\nPipeline attempts to cancel instances associated with the pipeline that are\ncurrently being processed by task runners.\n\nDeleting a pipeline cannot be undone. You cannot query or restore a deleted\npipeline. To temporarily pause a pipeline instead of deleting it, call SetStatus \nwith the status set to PAUSE on individual components. Components that are\npaused by SetStatus can be resumed.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeletePipeline.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeObjects": {
            "main": "./lib/actions/DescribeObjects.js",
            "title": "DescribeObjects",
            "description": "Gets the object definitions for a set of objects associated with the pipeline. Object definitions are composed of a set of fields that define the properties of the object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeObjects.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribePipelines": {
            "main": "./lib/actions/DescribePipelines.js",
            "title": "DescribePipelines",
            "description": "Retrieves metadata about one or more pipelines. The information retrieved\nincludes the name of the pipeline, the pipeline identifier, its current state,\nand the user account that owns the pipeline. Using account credentials, you can\nretrieve metadata about pipelines that you or your IAM users have created. If\nyou are using an IAM user account, you can retrieve metadata about only those\npipelines for which you have read permissions.\n\nTo retrieve the full pipeline definition instead of metadata about the pipeline,\ncall GetPipelineDefinition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribePipelines.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "EvaluateExpression": {
            "main": "./lib/actions/EvaluateExpression.js",
            "title": "EvaluateExpression",
            "description": "Task runners call <code>EvaluateExpression</code> to evaluate a string in the context of the specified object. For example, a task runner can evaluate SQL queries stored in Amazon S3.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/EvaluateExpression.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetPipelineDefinition": {
            "main": "./lib/actions/GetPipelineDefinition.js",
            "title": "GetPipelineDefinition",
            "description": "Gets the definition of the specified pipeline. You can call <code>GetPipelineDefinition</code> to retrieve the pipeline definition that you provided using <a>PutPipelineDefinition</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPipelineDefinition.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListPipelines": {
            "main": "./lib/actions/ListPipelines.js",
            "title": "ListPipelines",
            "description": "Lists the pipeline identifiers for all active pipelines that you have permission to access.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListPipelines.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PollForTask": {
            "main": "./lib/actions/PollForTask.js",
            "title": "PollForTask",
            "description": "Task runners call PollForTask to receive a task to perform from AWS Data\nPipeline. The task runner specifies which tasks it can perform by setting a\nvalue for the workerGroup parameter. The task returned can come from any of the\npipelines that match the workerGroup value passed in by the task runner and that\nwas launched using the IAM user credentials specified by the task runner.\n\nIf tasks are ready in the work queue, PollForTask returns a response\nimmediately. If no tasks are available in the queue, PollForTask uses\nlong-polling and holds on to a poll connection for up to a 90 seconds, during\nwhich time the first newly scheduled task is handed to the task runner. To\naccomodate this, set the socket timeout in your task runner to 90 seconds. The\ntask runner should not call PollForTask again on the same workerGroup until it\nreceives a response, and this can take up to 90 seconds.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PollForTask.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutPipelineDefinition": {
            "main": "./lib/actions/PutPipelineDefinition.js",
            "title": "PutPipelineDefinition",
            "description": "Adds tasks, schedules, and preconditions to the specified pipeline. You can use \nPutPipelineDefinition to populate a new pipeline.\n\n PutPipelineDefinition also validates the configuration as it adds it to the\npipeline. Changes to the pipeline are saved unless one of the following three\nvalidation errors exists in the pipeline. \n\n 1. An object is missing a name or identifier field.\n 2. A string or reference field is empty.\n 3. The number of objects in the pipeline exceeds the maximum allowed objects.\n 4. The pipeline is in a FINISHED state.\n\n Pipeline object definitions are passed to the PutPipelineDefinition action and\nreturned by the GetPipelineDefinition action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutPipelineDefinition.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "QueryObjects": {
            "main": "./lib/actions/QueryObjects.js",
            "title": "QueryObjects",
            "description": "Queries the specified pipeline for the names of objects that match the specified set of conditions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/QueryObjects.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RemoveTags": {
            "main": "./lib/actions/RemoveTags.js",
            "title": "RemoveTags",
            "description": "Removes existing tags from the specified pipeline.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RemoveTags.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ReportTaskProgress": {
            "main": "./lib/actions/ReportTaskProgress.js",
            "title": "ReportTaskProgress",
            "description": "Task runners call ReportTaskProgress when assigned a task to acknowledge that it\nhas the task. If the web service does not receive this acknowledgement within 2\nminutes, it assigns the task in a subsequent PollForTask call. After this\ninitial acknowledgement, the task runner only needs to report progress every 15\nminutes to maintain its ownership of the task. You can change this reporting\ntime from 15 minutes by specifying a reportProgressTimeout field in your\npipeline.\n\nIf a task runner does not report its status after 5 minutes, AWS Data Pipeline\nassumes that the task runner is unable to process the task and reassigns the\ntask in a subsequent response to PollForTask. Task runners should call \nReportTaskProgress every 60 seconds.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ReportTaskProgress.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ReportTaskRunnerHeartbeat": {
            "main": "./lib/actions/ReportTaskRunnerHeartbeat.js",
            "title": "ReportTaskRunnerHeartbeat",
            "description": "Task runners call <code>ReportTaskRunnerHeartbeat</code> every 15 minutes to indicate that they are operational. If the AWS Data Pipeline Task Runner is launched on a resource managed by AWS Data Pipeline, the web service can use this call to detect when the task runner application has failed and restart a new instance.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ReportTaskRunnerHeartbeat.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SetStatus": {
            "main": "./lib/actions/SetStatus.js",
            "title": "SetStatus",
            "description": "Requests that the status of the specified physical or logical pipeline objects be updated in the specified pipeline. This update might not occur immediately, but is eventually consistent. The status that can be set depends on the type of object (for example, DataNode or Activity). You cannot perform this operation on <code>FINISHED</code> pipelines and attempting to do so returns <code>InvalidRequestException</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SetStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "SetTaskStatus": {
            "main": "./lib/actions/SetTaskStatus.js",
            "title": "SetTaskStatus",
            "description": "Task runners call <code>SetTaskStatus</code> to notify AWS Data Pipeline that a task is completed and provide information about the final status. A task runner makes this call regardless of whether the task was sucessful. A task runner does not need to call <code>SetTaskStatus</code> for tasks that are canceled by the web service during a call to <a>ReportTaskProgress</a>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/SetTaskStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ValidatePipelineDefinition": {
            "main": "./lib/actions/ValidatePipelineDefinition.js",
            "title": "ValidatePipelineDefinition",
            "description": "Validates the specified pipeline definition to ensure that it is well formed and can be run without error.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ValidatePipelineDefinition.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}